set thread_stack_size=102400;
set dcu_status_check=1;

# Debug output is split between debug logs and regular logs
# set the amount of information sent from each, lower numbers
# print less information
set debug=0;
set log=6;

set zero_bad_data=0;
# a GDS broadcaster should set the gds channel list before
# loading the main channel list.
#set broadcast_config = "/opt/rtcds/tst/x1/target/x1broadcast0/broadcaster.ini";

# the main channel list config
set master_config="/etc/advligorts/master";
configure channels begin end;
# configure testpoints, note this MUST come after
# the 'set master_config' and 'configure channels begin end'
# commands
tpconfig "/etc/advligorts/testpoint.par";

status dcu;

# Set some basic parameters that get
# encoded into the frame.
set gps_leaps = 820108813;
set detector_name="TST";
set detector_prefix="X1";
set detector_longitude=-90.7742403889;
set detector_latitude=30.5628943337;
set detector_elevation=.0;
set detector_azimuths=1.1,4.7123889804;
set detector_altitudes=1.0,2.0;
set detector_midpoints=2000.0, 2000.0;

# Setup for writing frames
set num_dirs = 10;
set frames_per_dir=225;
set full_frames_per_file=1;
set full_frames_blocks_per_frame=16;
set frame_dir="/frames/full", "X-X1_R-", ".gwf";

# setup for writing trend frames
set trend_num_dirs=10;
set trend_frames_per_dir=1440;
set trend_frame_dir= "/frames/trend/second", "X-X1_T-", ".gwf";

set minute-trend-num-dirs=10;
set minute-trend-frames-per-dir=24;
set minute-trend-frame-dir="/frames/trend/minute", "X-X1_M-", ".gwf";

# writing minute trends these should be uncommented
#set raw-minute-trend-dir="/frames/trend/minute_raw";
#set raw_minute_trend_saving_period=5;

# Only modify this if you use a non-default nds process
# setup
#set nds-jobs-dir="/run/nds";

# the daqd reads from a shared memory buffer, set the
# input buffer name and size (in bytes).
set parameter "shmem_input" = "local_dc";
set parameter "shmem_size" = "104857600";

# a gds broadcaster would need to set this prior to
# starting the i/o code
#set parameter "GDS_BROADCAST" = "1";

# The 'start' commands start up daqd threads
# this starts the main thread which owns the circular buffer
# with a 5 second buffer.  Increasing the buffer length drives them
# memory usage of the daqd.  The size should be at least as long as the
# frames (for a frame writer) + some buffering.
start main 20;
# profiler threads give status and health checks
start profiler;

# start the raw frame writer, there is a start and sync call that must be in this order.
start frame-saver;
sync frame-saver;

# start the trender thread.  Note this is not the trend writer, but the thread which
# takes raw data, and makes the trends internally.
# start trender <seconds in a second trend frame> <seconds in a m-trend>
# The '60' is implicit, and cane be left out, but it cannot be set to a value different
# than 60.
start trender 600 60;
start trend profiler;
# This start/sync pair start the second trend frame writer
start trend-frame-saver;
sync trend-frame-saver;
# This start/sync pair start the minute trend frame writer
start minute-trend-frame-saver;
sync minute-trend-frame-saver;
# enable this to write the raw minute trends
#start raw-minute-trend-saver;

# GDS broadcasters would use this to enable the broadcast of the
# gds data stream.
#start frame-writer "10.120.0.255" broadcast="10.120.0.0" all;
sleep 2;

# now that the other threads are started, start the producer, which
# brings data in from the shared memory buffer and puts it into the
# main circular buffer
start producer;
# start the epics CA server (not the edcu) which gives status information
# via epics.
start epics server "X1:DAQ-SHM0_" "X1:DAQ-SHM0_";

# start the listening threads
# 8087 is the more 'text' based protocol, it is not strictly needed anymore.  But is meant
# for admins/developers to query the system and get responses that are more human readable.
start listener 8087;
# '8088 1' this is the main interface that speaks nds1.  The '1' marks this as the binary
# protocol.  This is the interface used by control room tools.  8088 is the port number.
start listener 8088 1;

# wait 60 seconds and clear the crc counters.  This is used in a restart situation to
# let everything come up, clear the counters so that we only see issues that are real, not
# error counts because the daqd was not running.
sleep 60;
clear crc;
