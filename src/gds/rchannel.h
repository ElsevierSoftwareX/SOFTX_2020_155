/* Version: $Id$ */
/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RCHANNEL_H_RPCGEN
#define _RCHANNEL_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#define _RPC_HDR
#include "dtt/rpcinc.h"

struct channelinfo_r {
	char chName[40];
	short ifoId;
	short rmId;
	short dcuId;
	short chNum;
	short dataType;
	int dataRate;
	short chGroup;
	short bps;
	float gain;
	float slope;
	float offset;
	char unit[40];
	u_long rmOffset;
	u_long rmBlockSize;
};
typedef struct channelinfo_r channelinfo_r;

typedef struct {
	u_int channellist_r_len;
	channelinfo_r *channellist_r_val;
} channellist_r;

struct resultChannelQuery_r {
	int status;
	channellist_r chnlist;
};
typedef struct resultChannelQuery_r resultChannelQuery_r;

#define RCHANNEL 0x31001005
#define RCHNVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define CHNQUERY 1
extern  enum clnt_stat chnquery_1(resultChannelQuery_r *, CLIENT *);
extern  bool_t chnquery_1_svc(resultChannelQuery_r *, struct svc_req *);
extern int rchannel_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define CHNQUERY 1
extern  enum clnt_stat chnquery_1();
extern  bool_t chnquery_1_svc();
extern int rchannel_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_channelinfo_r (XDR *, channelinfo_r*);
extern  bool_t xdr_channellist_r (XDR *, channellist_r*);
extern  bool_t xdr_resultChannelQuery_r (XDR *, resultChannelQuery_r*);

#else /* K&R C */
extern bool_t xdr_channelinfo_r ();
extern bool_t xdr_channellist_r ();
extern bool_t xdr_resultChannelQuery_r ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RCHANNEL_H_RPCGEN */
