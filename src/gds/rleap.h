/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RLEAP_H_RPCGEN
#define _RLEAP_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#define _RPC_HDR
#include "dtt/rpcinc.h"

struct leap_r {
	quad_t transition;
	int change;
};
typedef struct leap_r leap_r;

typedef struct {
	u_int leaplist_r_len;
	leap_r *leaplist_r_val;
} leaplist_r;

struct resultLeapQuery_r {
	int status;
	leaplist_r leaplist;
};
typedef struct resultLeapQuery_r resultLeapQuery_r;

#define RLEAPPROG 0x31001006
#define RLEAPVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define LEAPQUERY 1
extern  enum clnt_stat leapquery_1(resultLeapQuery_r *, CLIENT *);
extern  bool_t leapquery_1_svc(resultLeapQuery_r *, struct svc_req *);
extern int rleapprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define LEAPQUERY 1
extern  enum clnt_stat leapquery_1();
extern  bool_t leapquery_1_svc();
extern int rleapprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_leap_r (XDR *, leap_r*);
extern  bool_t xdr_leaplist_r (XDR *, leaplist_r*);
extern  bool_t xdr_resultLeapQuery_r (XDR *, resultLeapQuery_r*);

#else /* K&R C */
extern bool_t xdr_leap_r ();
extern bool_t xdr_leaplist_r ();
extern bool_t xdr_resultLeapQuery_r ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RLEAP_H_RPCGEN */
