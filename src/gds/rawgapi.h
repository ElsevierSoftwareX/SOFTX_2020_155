/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RAWGAPI_H_RPCGEN
#define _RAWGAPI_H_RPCGEN



#ifdef __cplusplus
extern "C" {
#endif

#define _RPC_HDR
#include "dtt/rpcinc.h"

struct awgcomponent_r {
	int wtype;
	int ramptype;
	double par[4];
	quad_t start;
	quad_t duration;
	quad_t restart;
	quad_t ramptime[2];
	double ramppar[4];
};
typedef struct awgcomponent_r awgcomponent_r;

typedef struct {
	u_int awgcomponent_list_r_len;
	awgcomponent_r *awgcomponent_list_r_val;
} awgcomponent_list_r;

typedef struct {
	u_int awgwaveform_r_len;
	float *awgwaveform_r_val;
} awgwaveform_r;

typedef struct {
	u_int awgfilter_r_len;
	double *awgfilter_r_val;
} awgfilter_r;

struct awgquerywaveforms_r {
	int status;
	awgcomponent_list_r wforms;
};
typedef struct awgquerywaveforms_r awgquerywaveforms_r;

struct awgshow_r {
	int status;
	char *res;
};
typedef struct awgshow_r awgshow_r;

struct awgstat_r {
	double pwNum;
	double pwMean;
	double pwStddev;
	double pwMax;
	double rmNum;
	double rmMean;
	double rmStddev;
	double rmMax;
	double rmCrit;
	double rmNumCrit;
	double dcNum;
	double dcMean;
	double dcStddev;
	double dcMax;
	double dcNumCrit;
	int status;
};
typedef struct awgstat_r awgstat_r;

struct awgnewchannel_1_argument {
	int chntype;
	int id;
	int arg1;
	int arg2;
};
typedef struct awgnewchannel_1_argument awgnewchannel_1_argument;

struct awgaddwaveform_1_argument {
	int slot;
	awgcomponent_list_r comps;
};
typedef struct awgaddwaveform_1_argument awgaddwaveform_1_argument;

struct awgsetwaveform_1_argument {
	int slot;
	awgwaveform_r wave;
};
typedef struct awgsetwaveform_1_argument awgsetwaveform_1_argument;

struct awgsendwaveform_1_argument {
	int slot;
	u_int time;
	int epoch;
	awgwaveform_r wave;
};
typedef struct awgsendwaveform_1_argument awgsendwaveform_1_argument;

struct awgstopwaveform_1_argument {
	int slot;
	int terminate;
	quad_t tArg;
};
typedef struct awgstopwaveform_1_argument awgstopwaveform_1_argument;

struct awgsetgain_1_argument {
	int slot;
	double gain;
	quad_t tArg;
};
typedef struct awgsetgain_1_argument awgsetgain_1_argument;

struct awgquerywaveforms_1_argument {
	int slot;
	int maxComp;
};
typedef struct awgquerywaveforms_1_argument awgquerywaveforms_1_argument;

struct awgsetfilter_1_argument {
	int slot;
	awgfilter_r filter;
};
typedef struct awgsetfilter_1_argument awgsetfilter_1_argument;

#define RAWGPROG 0x31001002
#define RAWGVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define AWGNEWCHANNEL 1
extern  enum clnt_stat awgnewchannel_1(int , int , int , int , int *, CLIENT *);
extern  bool_t awgnewchannel_1_svc(int , int , int , int , int *, struct svc_req *);
#define AWGREMOVECHANNEL 2
extern  enum clnt_stat awgremovechannel_1(int , int *, CLIENT *);
extern  bool_t awgremovechannel_1_svc(int , int *, struct svc_req *);
#define AWGADDWAVEFORM 3
extern  enum clnt_stat awgaddwaveform_1(int , awgcomponent_list_r , int *, CLIENT *);
extern  bool_t awgaddwaveform_1_svc(int , awgcomponent_list_r , int *, struct svc_req *);
#define AWGSETWAVEFORM 4
extern  enum clnt_stat awgsetwaveform_1(int , awgwaveform_r , int *, CLIENT *);
extern  bool_t awgsetwaveform_1_svc(int , awgwaveform_r , int *, struct svc_req *);
#define AWGSENDWAVEFORM 11
extern  enum clnt_stat awgsendwaveform_1(int , u_int , int , awgwaveform_r , int *, CLIENT *);
extern  bool_t awgsendwaveform_1_svc(int , u_int , int , awgwaveform_r , int *, struct svc_req *);
#define AWGSTOPWAVEFORM 10
extern  enum clnt_stat awgstopwaveform_1(int , int , quad_t , int *, CLIENT *);
extern  bool_t awgstopwaveform_1_svc(int , int , quad_t , int *, struct svc_req *);
#define AWGSETGAIN 14
extern  enum clnt_stat awgsetgain_1(int , double , quad_t , int *, CLIENT *);
extern  bool_t awgsetgain_1_svc(int , double , quad_t , int *, struct svc_req *);
#define AWGCLEARWAVEFORMS 5
extern  enum clnt_stat awgclearwaveforms_1(int , int *, CLIENT *);
extern  bool_t awgclearwaveforms_1_svc(int , int *, struct svc_req *);
#define AWGQUERYWAVEFORMS 6
extern  enum clnt_stat awgquerywaveforms_1(int , int , awgquerywaveforms_r *, CLIENT *);
extern  bool_t awgquerywaveforms_1_svc(int , int , awgquerywaveforms_r *, struct svc_req *);
#define AWGRESET 7
extern  enum clnt_stat awgreset_1(int *, CLIENT *);
extern  bool_t awgreset_1_svc(int *, struct svc_req *);
#define AWGSETFILTER 12
extern  enum clnt_stat awgsetfilter_1(int , awgfilter_r , int *, CLIENT *);
extern  bool_t awgsetfilter_1_svc(int , awgfilter_r , int *, struct svc_req *);
#define AWGSTATISTICS 8
extern  enum clnt_stat awgstatistics_1(int , awgstat_r *, CLIENT *);
extern  bool_t awgstatistics_1_svc(int , awgstat_r *, struct svc_req *);
#define AWGSHOW 9
extern  enum clnt_stat awgshow_1(awgshow_r *, CLIENT *);
extern  bool_t awgshow_1_svc(awgshow_r *, struct svc_req *);
#define AWGSHOWSLOT 13
extern  enum clnt_stat awgshowslot_1(int , awgshow_r *, CLIENT *);
extern  bool_t awgshowslot_1_svc(int , awgshow_r *, struct svc_req *);
extern int rawgprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define AWGNEWCHANNEL 1
extern  enum clnt_stat awgnewchannel_1();
extern  bool_t awgnewchannel_1_svc();
#define AWGREMOVECHANNEL 2
extern  enum clnt_stat awgremovechannel_1();
extern  bool_t awgremovechannel_1_svc();
#define AWGADDWAVEFORM 3
extern  enum clnt_stat awgaddwaveform_1();
extern  bool_t awgaddwaveform_1_svc();
#define AWGSETWAVEFORM 4
extern  enum clnt_stat awgsetwaveform_1();
extern  bool_t awgsetwaveform_1_svc();
#define AWGSENDWAVEFORM 11
extern  enum clnt_stat awgsendwaveform_1();
extern  bool_t awgsendwaveform_1_svc();
#define AWGSTOPWAVEFORM 10
extern  enum clnt_stat awgstopwaveform_1();
extern  bool_t awgstopwaveform_1_svc();
#define AWGSETGAIN 14
extern  enum clnt_stat awgsetgain_1();
extern  bool_t awgsetgain_1_svc();
#define AWGCLEARWAVEFORMS 5
extern  enum clnt_stat awgclearwaveforms_1();
extern  bool_t awgclearwaveforms_1_svc();
#define AWGQUERYWAVEFORMS 6
extern  enum clnt_stat awgquerywaveforms_1();
extern  bool_t awgquerywaveforms_1_svc();
#define AWGRESET 7
extern  enum clnt_stat awgreset_1();
extern  bool_t awgreset_1_svc();
#define AWGSETFILTER 12
extern  enum clnt_stat awgsetfilter_1();
extern  bool_t awgsetfilter_1_svc();
#define AWGSTATISTICS 8
extern  enum clnt_stat awgstatistics_1();
extern  bool_t awgstatistics_1_svc();
#define AWGSHOW 9
extern  enum clnt_stat awgshow_1();
extern  bool_t awgshow_1_svc();
#define AWGSHOWSLOT 13
extern  enum clnt_stat awgshowslot_1();
extern  bool_t awgshowslot_1_svc();
extern int rawgprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_awgcomponent_r (XDR *, awgcomponent_r*);
extern  bool_t xdr_awgcomponent_list_r (XDR *, awgcomponent_list_r*);
extern  bool_t xdr_awgwaveform_r (XDR *, awgwaveform_r*);
extern  bool_t xdr_awgfilter_r (XDR *, awgfilter_r*);
extern  bool_t xdr_awgquerywaveforms_r (XDR *, awgquerywaveforms_r*);
extern  bool_t xdr_awgshow_r (XDR *, awgshow_r*);
extern  bool_t xdr_awgstat_r (XDR *, awgstat_r*);
extern  bool_t xdr_awgnewchannel_1_argument (XDR *, awgnewchannel_1_argument*);
extern  bool_t xdr_awgaddwaveform_1_argument (XDR *, awgaddwaveform_1_argument*);
extern  bool_t xdr_awgsetwaveform_1_argument (XDR *, awgsetwaveform_1_argument*);
extern  bool_t xdr_awgsendwaveform_1_argument (XDR *, awgsendwaveform_1_argument*);
extern  bool_t xdr_awgstopwaveform_1_argument (XDR *, awgstopwaveform_1_argument*);
extern  bool_t xdr_awgsetgain_1_argument (XDR *, awgsetgain_1_argument*);
extern  bool_t xdr_awgquerywaveforms_1_argument (XDR *, awgquerywaveforms_1_argument*);
extern  bool_t xdr_awgsetfilter_1_argument (XDR *, awgsetfilter_1_argument*);

#else /* K&R C */
extern bool_t xdr_awgcomponent_r ();
extern bool_t xdr_awgcomponent_list_r ();
extern bool_t xdr_awgwaveform_r ();
extern bool_t xdr_awgfilter_r ();
extern bool_t xdr_awgquerywaveforms_r ();
extern bool_t xdr_awgshow_r ();
extern bool_t xdr_awgstat_r ();
extern bool_t xdr_awgnewchannel_1_argument ();
extern bool_t xdr_awgaddwaveform_1_argument ();
extern bool_t xdr_awgsetwaveform_1_argument ();
extern bool_t xdr_awgsendwaveform_1_argument ();
extern bool_t xdr_awgstopwaveform_1_argument ();
extern bool_t xdr_awgsetgain_1_argument ();
extern bool_t xdr_awgquerywaveforms_1_argument ();
extern bool_t xdr_awgsetfilter_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RAWGAPI_H_RPCGEN */
