-a:                   Collect data for tcov basic block profiling (old format)
-ansi:                Report non-ANSI extensions.
-arg=local:           Pass by value result
-autopar:             Generate parallelized code (automatic only, requires iMPact license)
-BX:                  Specify dynamic or static binding
-c:                   Compile only - produce .o files, suppress linking
-C:                   Enable runtime subscript range checking
-cg89:                Generate code for generic SPARC V7 architecture
-cg92:                Generate code for SPARC V8 architecture
-copyargs:            Allow assignment to constant arguments
-dalign:              Assume double-type data is double aligned
-dbl:                 Double default size for INTEGER, REAL, etc.
-depend:              Analyze loops for data dependencies
-dn:                  Specify static binding
-dryrun:              Show compiler commands built by driver, but do not compile
-DX:                  Define preprocessor symbol X
-dy:                  Allow dynamic libraries
-e:                   Recognize extended (132 character) source lines
-explicitpar:         Parallelize loops marked with explicit iMPact directives
-ext_names=plain:     Use the Sun C compiler's naming conventions
-ext_names=underscores: Use the Sun FORTRAN 77 compiler's naming conventions
-F:                   Apply the preprocessor cpp to .F files, but do not compile
-f:                   Force non-standard alignment of 8-byte quantities
-fast:                Optimize for a balance of speed of execution vs. compilation
-flags:               Print summary of compiler options
-fnonstd:             Non-standard initialization of floating-point hardware
-fns:                 Turn on non-standard floating point mode
-fround=<r>:          Use the IEEE rounding modes in effect at startup
-fsimple:             Permit optimizer to use simplified model of floating point arithmetic
-ftrap=<t>:           Use the IEEE trapping modes in effect at startup
-G:                   Build a dynamic shared library
-g:                   Compile for debugging by dbx
-help:                Print summary of compiler options
-hX:                  Assign name X to dynamic shared library
-i2:                  Make the default INTEGER size two bytes
-i4:                  Make the default INTEGER size four bytes
-inline=[f1,...,fn]:  Attempt to inline f1, ... fn, exclude all others, regardless of optimization level
-IX:                  Add X to include search path
-keeptmp:             Keep temporary files created during compilation
-KPIC:                Generate position independent code
-Kpic:                Like -KPIC, but with a smaller global offset table
-libmil:              Use inline expansion templates for libm
-loopinfo:            Show which loops are parallelized (requires iMPact license)
-lX:                  Link with library libname.a
-LX:                  Passed to the linker to add X to the library search path
-misalign:            Allow proper loads and stores of misaligned data
-mp=cray:             Accept only the cray-style MP directives
-mp=sun:              Accept only the sun-style MP directives
-mt:                  Link with mt-safe libraries
-native:              Optimize performance for the host system
-NcX:                 Set size of do loop nesting compiler table to X
-NdX:                 Set size of structure-decl nesting compiler table to X
-NlX:                 Set maximum  number of continuation lines to X
-NnX:                 Set size of identifier compiler table to X
-noautopar:           Suppress automatic parallelization (requires iMPact license)
-nocx:                Do not link with -lcx
-nodepend:            Disable loop data dependency analysis
-noexplicitpar:       Suppress explicit parallelization (requires parallel license)
-nolib:               Do not provide default libraries to linker
-nolibmil:            Reset -fast so that it does not include inline templates
-noqueue:             Disable queuing of compiler license requests 
-noreduction:         Suppress performing reduction when generating parallelized code (requires iMPact license)
-norunpath:           Do not build a runtime path to shared libraries into the executable
-NqX:                 Set size of equivalenced variables compiler table to X
-NsX:                 Set size of statement numbers compiler table to X
-NxX:                 Set size of external identifier compiler table to X
-o file:              Set name of output file
-O1:                  Generate optimized code
-O2:                  Generate optimized code
-O3:                  Generate optimized code
-O4:                  Generate optimized code
-O5:                  Generate optimized code
-O:                   Generate optimized code; use default level (O3)
-oldldo:              Suppress leading blank for list-directed I/O (non-ANSI)
-onetrip:             Perform DO loops at least once
-p:                   Prepare object code to collect data for profiling (prof)
-pad[=<p>]:           Pad local variables or common blocks, or both, for efficient use of the cache
-parallel:            Perform parallel compilation (requires iMPact license)
-pg:                  Prepare object code to collect data for profiling with gprof
-PIC:                 Same as -KPIC
-pic:                 Same as -Kpic
-Qoption prog option: Pass options list to program
-qp:                  Same as -p
-r8:                  Interpret REAL as REAL*8, etc.
-reduction:           Analyze and parallelize reduction loops
-RX:                  Set dynamic linker library path to X
-S:                   Generate .s file only (do not assemble or link)
-s:                   Strip symbol table from the executable file
-sb:                  Compile for use with source browser
-sbfast:              Generate source browser information, no compilation
-silent:              Do not echo file and routine names during compilation
-stackvar:            Allocate local variables on the memory stack
-temp=dir:            Set directory for temporary files to <dir>
-time:                Report the execution time for each compiler pass
-U:                   Do not treat source file upper case letters as lower case
-u:                   Report on use of undeclared variables
-unroll=X:            Attempt to unroll DO loops n times
-V:                   Report version number of each compiler pass
-v:                   Verbose mode - report name of each invoked compiler pass
-vax=align:           Retain the 'old' (release 3.0 and earlier) -xl behavior
-vax=misalign:        Go VMS way in case of conflict.  Compile debug stmts
-vax=no:              equivalent to not specifying -xl in release 3.0 and earlier
-vpara:               Issue warnings for loops that cannot be parallelized (requires iMPact license)
-w:                   Suppress compiler warning messages
-xa:                  Same as -a
-xarch=<a>:           Generate instructions for a specific version of the SPARC architecture
-xautopar:            Same as -autopar
-xcache=<c>:          Optimize for a specific set of cache parameters
-xcg89:               Same as -cg89
-xcg92:               Same as -cg92
-xchip=<c>:           Optimize code for a specific processor
-xdepend:             Same as -depend
-xexplicitpar:        Same as -explicitpar
-xF:                  Produce code for use with the Analyzer and Debugger
-xhelp=<f>:           Display contents of online information
-xildoff:             Disable use of the incremental linker
-xildon:              Enable use of the incremental linker
-xinline=[f1,...,fn]: Same as -inline
-xl:                  Go VMS way in case of conflict.  Compile debug stmts
-xld:                 Go VMS way in case of conflict.  Compile debug stmts
-xlibmil:             Same as -libmil
-xlibmopt:            Link with -lmopt and -lcopt in proper order
-xlicinfo:            Return status of licensing system
-Xlist:               Show errors, produce cross reference listing and global program checking
-Xlistc:              Show errors and produce call graph only - no source listing or cross reference
-XlistE:              Show cross-routine errors only - no source listing or cross reference
-XlisterrNNN:         Suppress error NNN in the verification report
-Xlistf:              For faster output, produce listings but do not generate object files
-XlistflnD:           Put the .fln files into the directory D
-Xlisth:              Halt compilation if errors are detected during cross-checking
-XlistI:              List and cross-check the INCLUDE files
-XlistL:              Show errors and produce source listing only - no cross reference
-XlistlN:             Set page length for listings to N lines. Default is 66
-Xlisto name:         Redirect output listings to the file name.lst
-Xlists:              Suppress unreferenced identifiers from cross-reference listing
-XlistvN:             Set level of checking to N. Default is 2
-XlistwarNNN:         Suppress warning NNN in the cross-checking reports
-XlistwNNN:           Set width of output line for cross-reference listing to NNN columns
-XlistX:              Show errors and produce cross reference listing - no source listing
-xloopinfo:           Same as -loopinfo
-xnolib:              Same as -nolib
-xnolibmil:           Same as -nolibmil
-xnolibmopt:          Reset -fast so that it does not link with -lmopt or -lcopt
-xO1:                 Generate optimized code
-xO2:                 Generate optimized code
-xO3:                 Generate optimized code
-xO4:                 Generate optimized code
-xO5:                 Generate optimized code
-xpad[=<p>]:          Same as -pad
-xparallel:           Same as -parallel
-xpg:                 Same as -pg
-xprofile=tcov:       Collect data for tcov basic block profiling (new format)
-xprofile=use:        Use data collected for profile feedback
-xreduction:          Same as -reduction
-xregs=<r>:           Specify the usage of optional registers
-xs:                  Place symbol tables for dbx in executable file
-xsafe=mem:           Assume that no memory based traps will occur
-xsb:                 Same as -sb
-xsbfast:             Same as -sbfast
-xspace:              Do not do optimizations that increase code size
-xtarget=<t>:         Generate and optimize code for a specific target system
-xtime:               Same as -time
-xunroll=X:           Same as -unroll
-xvpara:              Same as -vpara
-z X:                 link editor option
-Zlp=X:               Prepare for looptool profiling (iMPact, Solaris 2.x, SPARC)
-ZlpX:                Prepare for looptool profiling (iMPact, Solaris 2.x, SPARC)
-ztext:               Do not make library if relocations remain
-Ztha:                Profile for MT thread analyzer (requires iMPact license)
All other options are passed down to ld.

Suffix 'a':           Object library
Suffix 'il':          Inline expansion file
Suffix 'o':           Object file
Suffix 'so':          Shared object
Suffix 's':           Assembler source
Suffix 'S':           Assembler source for cpp
Suffix 'for':         f77 source
Suffix 'f':           f77 source
Suffix 'F':           f77 source for cpp
Suffix 'r':           Ratfor source
Suffix 'lst':         f77 listing
Suffix 'fln':         f77 Global Program Checking data

For additional product information or the name of a SunSoft reseller,
please call 1-800-SUNSOFT, or 1-512-434-1511 (outside the US),
or fax your request to (+1) 512-218-3866.

For technical support, contact your SunSoft reseller for the name of an
Authorized Service Provider.

To comment on any of our products, please use the template found in
/apps/SUNWspro/READMEs/feedback.
Email these comments to sunsoft-dp-comments@Sun.COM, or fax them to
(+1) 512-218-3866.

For more information, browse http: //www.sun.com/developer-products/

