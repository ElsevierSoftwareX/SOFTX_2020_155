diff --git b/include/linux/syslog.h a/include/linux/syslog.h
index ce4c665..3891139 100644
--- b/include/linux/syslog.h
+++ a/include/linux/syslog.h
@@ -47,12 +47,6 @@
 #define SYSLOG_FROM_CALL 0
 #define SYSLOG_FROM_FILE 1
 
-/*
- * Syslog priority (PRI) maximum length in char : '<[0-9]{1,3}>'
- * See RFC5424 for details
-*/
-#define SYSLOG_PRI_MAX_LENGTH 5
-
 int do_syslog(int type, char __user *buf, int count, bool from_file);
 
 #endif /* _LINUX_SYSLOG_H */
diff --git b/kernel/printk.c a/kernel/printk.c
index 6edc4e89..3fc4708 100644
--- b/kernel/printk.c
+++ a/kernel/printk.c
@@ -633,19 +633,8 @@ static void call_console_drivers(unsigned start, unsigned end)
 	start_print = start;
 	while (cur_index != end) {
 		if (msg_level < 0 && ((end - cur_index) > 2)) {
-			/*
-			 * prepare buf_prefix, as a contiguous array,
-			 * to be processed by log_prefix function
-			 */
-			char buf_prefix[SYSLOG_PRI_MAX_LENGTH+1];
-			unsigned i;
-			for (i = 0; i < ((end - cur_index)) && (i < SYSLOG_PRI_MAX_LENGTH); i++) {
-				buf_prefix[i] = LOG_BUF(cur_index + i);
-			}
-			buf_prefix[i] = '\0'; /* force '\0' as last string character */
-
 			/* strip log prefix */
-			cur_index += log_prefix((const char *)&buf_prefix, &msg_level, NULL);
+			cur_index += log_prefix(&LOG_BUF(cur_index), &msg_level, NULL);
 			start_print = cur_index;
 		}
 		while (cur_index != end) {
