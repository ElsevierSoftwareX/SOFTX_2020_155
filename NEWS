- Added IPC receiver diagnostics code, as discussed in CDS meeting 12/12/12. 
- Bug fix for Acces I/O 8 and 16 channel relay I/O cards.
===========================
Overview of changes for 2.6
===========================
- mx_stream and daqd changes to improve OpenMX to MX communication
- Bug Fix: changed front-end filter module to the Epics variable update rate. It used to
  read and write these variables on every front-end cycle. There was a problem with this arrangement
  detected at AEI in Hannover on the AMD hardware. We needed to slow down the rate of the communication,
  which is done through the shared memory, in order to fix a dramatic slow down in the front-end
  running speed, which was seen right after the code upgrade.
- IPC code generation portion of feCodeGen.pl moved to IPCx.pm (part of cleanup)
- Bug Fix: Memory size mismatch for TP table between awgtpman and daqLib.
- RCG_HOST environment variable added. This setting will override the hostname in the user model to allow running
  on different machines in test stands ie startup command will now have this computer name to check on startup.
- General cleanup based on compiler warning messages; warning messages turned back on to provide info the build logs.
- Added C99 compile flag to Makefiles. Changed O3 optimization flag to just O after some errors at 40m lab in their
  C code which generated large arrays.
- Increased max IPC channels per net or computer to 512 (previously 64). Added RCG compile time error if this is exceeded.
- Reinstated support for RFM comms via DMA (rfm_dma=1 in param block). A couple of caviats:
	- IOP, as well as user models, must be compiled with this option.
	- Only supports 96 total IPC channels on each RFM network (not full 512).
	- Max send rate is limited to 16K.
	- Sender model must complete in <40usec to deliver signal across 4Km to be received in proper time slot. 
- Implemented TP upper limit checking ie ensure total DAQ network rate/model <4MByte/sec. This is a coordinated effor
  between daqLib.c and awgtpman ie daqLib passes size to awgtpman, which will reject further requests if >4MByte/sec.
- Added IPC name and sender model name to IPC info tables for additional diagnostics vi dmesg and /proc files.
- Added DAC buffer size info to /proc. EPICS Dac diag info only indicates if DAC buffer data size is incorrect. Diags to /proc
  file indicate if this is an overflow or underflow condition.
- Bug Fix (#400): RCG Makefile now checks for undefined symbols in the kernel object and throws error. 
- Bug fixes for 394, 395, 404, 406, 407, 402, 409
- Added new filter module w/control 2 part. Allows setting of offsets, gains, and ramp times and switching of input, offset, 
  and output switches from within model.
- Changed Dolphin network cache flushing to only occur after last write in list. This takes much less time than fix for 2.5.1,
  where cache flushing occurs after every write. Tested ok with test model sending 200 signals at 32K.
- Check added to verify CPU core is not in use by another model prior to loading new one. Requires a kernel patch (see .patch
  files).
- EPICS update rate increase from 4-5Hz to 16Hz, triggered by RT code. New EPICS channel (IFO:FEC-DCUID_EPICS_SYNC) updated (0-15) 
  at 16Hz for use by scripts, if desired.
- Bug fix for models containing both 18bit and 16bit DAC modules. However, it is required that 18bit DAC modules show up on
  the PCIe bus before 16bit modules in the I/O chassis.
===========================================================
Tagged release 2.5.1 from branch 2.5
===========================================================
- Cache flushing added to Dolphin network writes. This cleared IPC errors on receivers.
===========================================================
Tagged Release 2.5, with final set of changes listed below.
==========================================================
- Bug fix for new Contec BIO cards - Code not addressing boards properly if user model skipped cards in I/O chassis.
- Reinstate SQRT part in CDS_PARTS - got lost along the way.
- Channel hopping error detection now results in code exit ie dangerous to keep running if ADC channels are mixed up.
- Remaining bug fixes from test results can be found in the SVN log.
===========================
Overview of changes for 2.5 - Branch released 3/19/12 for testing.
===========================
- Additional checks in RCG to verify that user has correctly numbered ADC/DAC cards.
- OSEM IOP Watch Dogs:  Added susWatchdogFilters.c in the src/drv directory.  Added the SUS_IOP_WD.mdl and OSEM_WD.mdl models to src/epics/simLink/lib.  The OSEM_WD.mdl is a model which watches a single OSEM input and if the RMS becomes to large, or the DC value is too high or low, sets an output value of 0, indicating to stop running.  The SUS_IOP_WD.mdl chains 6 of the OSEM_WD.mdl parts together for a top stage.  The susWatchdogFilters.c contains hard coded a 100 mHz high pass filter and 10 mHz low pass filter used by the OSEM_WD.mdl model.  These parts are intended to be used in an IOP connected to suspensions, to watch the top stage OSEMs for signs of excessive motion and send a signal to the new cdsDacKill part.
- Guardian Support: A new monitor has been added to src/epics/seq/main.c to monitor
  alarm setpoints to support Guardian scripts. This monitor, once per second:
  - Performs a CRC checksum on all EPICS .HSV and .LSV (High/Low alarm settings)
    and transmits this as an EPICS channel (IFO:FEC-DCU_ID_GRD_ALH_CRC). This is
    intended to be read by the Guardian to verify that the code is monitoring the
    correct state.
  - Checks all EPICS channels .STAT (Alarm status) field. The number of HIGH/LOW
    alarms is sent out via two EPICS channels, one for setpoint (operator input)
    errors ie setpoints outside set limits (IFO:FEC-DCU_ID_GRD_SP_ERR_CNT), and
    another for total readback channels outside limits (IFO:FEC-DCUID_GRD_RB-ERR_CNT).
    There are an additional 10 EPICS channels to report the name of the channel that
    in an alarm state, 10 for reporting setpoint errors (IFO:FEC-DCUID_GRD_SP_STAT(0-9))
    and 10 for reporting readback errors (IFO:FEC-DCUID_GRD_RB_STAT(0-9));
  - New filter module screens, with additional related display button (GUARDIAN SET),
    which calls up a new screen with filter module alarm setpoints for Guardian. 
    Backgrounds for setpoints also changed to black w/alarm color mode to have 
    setpoint alarms display in Red if not within the prescribed range.
- Bug fix: If ADC input connected to Filter Module w/control, signal name and 
  values would not be added to autogenerated ADC monitor screens. 
- Bug fix: Possible for two, or more, user models to write to the same DAC channel. 
  To avoid this, code now registers for DAC channels on startup, and, if DAC 
  channel is already in use by another application, the code exits, with
  error message sent to dmesg, with offending DAC card(s) and channel number(s).
- cdsDacKill part added. This part, along with controller.c changes, allows user
  models to communicate DAC shutdown info directly with code actually writing
  the DAC outputs. This was added to allow user watchdogs to kill DAC outputs
  directly at the source of the DAC output code. Only one (1) of these parts is
  allowed per user model and RCG will kick out error if >1 defined.
- Fixed filter module on/off switching handoff between the Epics buttons
  and the control input. This applies to the filter module with controls
  only. Filter module can be turned on using the control input bit and this
  state is kept even when the bit is cleared in the mask input. Also
  the Epics button will not control a request bit for a filter if 
  it is masked out to be controlled through the control input programmatically.
- Added new frame builder record, e.g. C0:DAQ-FB0_CHANS_SAVED
  to display the total count of saved channels in full frames.
- Added new cdsParameter "no_zero_pad=1" can be used to
  stop zero padding DAC data. This is usefull if sending a flat DC
  signal to a DAC channels is desired.
- Fixed broken "biquad=1" flag handling code.
- New parts for CONTEC6464 binary I/O modules for use in user application
  models - NOTE part for use in IOP is not changed and code is still 
  backward compatible with user models using the original part.
- DAC names no longer matter ie code only check card_num=
- skeleton.st updated to check if DAQ .ini has changed since
  last changed since last file load to front end.
===========================
Bug fix for 2.4.2
===========================
- I/O bug fix: Incorrect size of ADC/DAC down/up sampling filter history buffers.
  If more than 3 ADC modules defined in user model, ADC downsampling
  history would bleed into DAC upsampling filter history, essentially causing
  a "short" from ADC input to DAC output. Code fix was to use MAX_ADC_MODULES and
  MAX_DAC_MODULES (12), as defined in cdsHardware.h, which has been used for
  sizing all other ADC/DAC related arrays.
===========================
Bug fix for 2.4.1
===========================
- map.c has fix added for DAC modules with PEX8111 interface chips ie
  all those boards that are native PCIe and not PCM cards (older revs).
- Reinstated DAC DMA as default mode after fix above. Since DAC buffer
  now used as a buffer, of sorts, moved DMA code into DAC write area.
===========================
Overview of changes for 2.4
===========================

- Changed all remaining floats into doubles in Epics sequencers.
- Improved generated autoburt request file, where all readbacks are
  marked readonly now.
- Added new cdsParameters setting: biquad.
  biquad=1 forces all filter modules as well as ADC/DAC up/down filters and
  DAQ downsampling filters to be calculated using biquad form.
- Until DMA issues with General Standards DAC modules are resolved the IOP code
  has direct DAC write code enabled, DMA is not used to write to the DAC modules.
- DAQ decimation filtering and oversampling filter is done using biquad form IIR filters,
  if cdsParameters block has biquad=1.
- Do not update DAQ configuration file (INI file) during installation,
  move it away into archive and install new file, generated based on DAQ
  chanenls list in the RCG model.
- New DCU Id Epics channel, e.g. L1:SUS-ITMX_DCU_ID
- New FE overall state word Epics channel, named e.g. L1:FEC-28_STATE_WORD,
  where the lower 7 bits are set as follows:
  	FE stopped		-	bit 0
	Code timing problem	-	bit 1
	I/O problem		- 	bit 2
	AWG dead		-	bit 3
	DAQ dead		- 	bit 4
	IPC errors detected	-	bit 5
	A/D or D/A overflowed	-	bit 6
- Source code has ./configure script now, which needs to be executed once
  before cmopilation of RCG models can be done. Build can be done in a 
  directory separate from the source now. RCG source can be made read-only now.
- Do not create backup Makefiles in the FE build directory.
- DAQ upgraded from 2MB/sec to 4MB/sec.
- DAQ channel list in the RCG models support.
- DAQ file check performed at run time.
- Oscillator and filer module spline ramping
- Filter module spline offset ramping
- Spline ramping phase stability improvements
- Mask input for a filter module with control
- New FE code timing/daq/GDS monitor screens
- FE code watchdog in EPICS sequencer (state word bit 0)
- FPU SSE instructions underflows were turned off and floating point
  denorms were forced to zero by setting FZ and DAZ bits in the CPU MXCSR register.
  +-1e-20 limiting code was removed from the filter code.
- NOTE: DAQ INI file checker script src/epics/util/iniChk.pl needs to be installed
  in a location on PATH for a front-end system, before the Epics process is
  restarted. A good location is /opt/rtcds/llo/l1/scripts/iniChk.pl.
- NOTE: Extra EXC part is broken in this release, will be fixed in the next release.
  It was discovered that this part is not working correctly and needs debugging.
  Filter module excitation works fine as before.
- Added post-build script execution at the end of install step.
  T1100340-v1 https://dcc.ligo.org/cgi-bin/private/DocDB/ShowDocument?docid=63485
- When a brand new model is compiled and started for the first time there is no
  existing burt snapshot for it to restore and it used to be that the operator needed
  to press the BURT button on the GDS screen within 10 seconds in order for the FE kernel
  module start running or else the FE execution failed. This was fixed by writing 1 into
  BURT_RESTORE channel within the generated startup script.
- Linux kernel 3.0.8 (patched with patches/linux-3.0-cs.patch and configured with
  patches/linux-3.0.8-cs.config) was tested at LLO and wwas found working just as well as
  the currently used 2.6.34.1 kernel. mbuf driver (src/drv/mbuf) was modified to
  compile on 3.0.8 kernel.
- New Epics channel added to show the total number of testpoint selected L1:FEC-7_TP_CNT.
- Added DAC Duotone  measurement feature along with the selection switch L1:FEC-7_DACDT_ENABLE.
- The startup script now looks for an optional safe.snap file, e.g.
  /opt/rtcds/llo/l1/target/l1lsctest/l1lsctestepics/burt/safe.snap
  and burt restores this file instead of the latest burt snapshot.


Overview of changes from 2.3 
============================
Bug Fixes:
- fixed rogue testpoints shown up at AEI/GEO and LLOLSC

New Feature:
- added flip_signals parameter to make working with buffered and unbuffered
  aa/ai filters easier

Overview of changes from 2.1 to 2.3
===================================

Bug Fixes:
- daqLib.c fixed to support up to 256x decimation for DAQ channels. Previous versions only
provided proper decimation to 32x.
- FiltCtrl.pm bug fix to provide all filter module switch setting bits at status output.
- Bit2Word.pm bug fix.
- controller.c, map.c and map.h changed to support double buffer for DAC outputs. This fixes a bug where
a race condition could exist between the IOP loading new DAC data into the same buffer and at the same time
as the DAC module was trying to DMA data out of that buffer.
- Set the '-2' awgtpman flag for a 4K system in top level Makefile.
- Fixed biquad filter module operation.
- Change inputFilter part to use extensions of GAIN,POLE, ZERO instead of K,P,Z.
- RMS part to have limits of +/-200000 instead of +/-2000.


New Additions:
- Updated dataviewer with support for 32K and 64K resolution data viewing.
- Various updates to support new longer signal names (Max size, with extensions, 60 chars).

Overview of changes from 2.0 to 2.1
==================================
New Branch, which includes:

New Features:
1) RCG provides default code rate in coeff.txt files for use by foton.
2) New IIR filter part based on BiQuad filter algorithm as provided by M. Evans.
3) Ability to include a user-defined library part in an RCG model.
4) Support for connection of buses between multiple layers of the model, not just on save level.
5) Auto-generated EPICS.ini files for each model.
6) Check of 16bit DAC module FIFOs for proper clocking plus new error bit added to GDS_TP screens..
7) Change of _DAQ to _DQ tag on filter modules in DAQ .ini files.

Bug Fixes:
1) Fix to EPICS EZCA part to:
- compile correctly within subsystem parts.
- Use pvPut instead of EZCA for performance reasons (plus EZCA not supported in latest EPICS).
2) Removal of SVN tag from BURT file ie BURT restore would overwrite latest SVN tag).
3) Fix to slave model DAC status info on GDS TP screens (false error indicator).
4) Change in CDS_PARTS.mdl bus selector part to set use to "Require input signal names to match signals below", instead of "Inheri
t bus signal names from input ports". This is required to make BUS parts work with new, multi-level BUS parser in RCG.


