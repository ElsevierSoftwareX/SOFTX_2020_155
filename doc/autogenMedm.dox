/*! \page autoMedm Auto-generated MEDM Screens
As part of the build process, the RCG generates a number of EPICS MEDM screens. These are described in the following subsections,
or reference links are provided to other documentation. \n\n
<b>GDS_TP Screens</b> \n
\verbatim
A single GDS_TP screen is generated for each code model. This screen provides diagnostic information to the user as to the state of
the real-time and EPICS code at runtime.

Shown is an example GDS_TP screen, further exploded into the 3 primary sections, with information on each field listed below.
\endverbatim
\image html gdsTpMedm1.png "IOP GDSTP Screen"
\verbatim

\endverbatim
\image html gdsTpMedm5.png "IOP GDSTP Screen - Exploded"
<b>Timing Status Section</b>
\verbatim
1. ADC Timeout Indicator: 
	- Normal Indication: GREEN, all ADC modules are clocking on time.
	- Fault Indication: RED, one, or more ADC modules are not clocking on time and real-time code will exit.
2. CPU Meter: Updated once/second, this indicates the time of the longest code cycle in that period of time. The banner is set to the
		maximum amount of time allotted for a code cycle, given the user set sample rate.
3. GPS Time: The present GPS Time, in GPS seconds, as presently set in the real-time code.
4. Sync Source: The source of synchonization for the real-time code.
	- Normal Indication:
		- IOP process: TDS (Timing Distribution System) or 1PPS. Note for aLIGO systems, this should always be TDS.
		- User App (Slave) process: IOP, indicating code is being synchronized by the IOP process on that computer.
	- Fault Indication: NO SYNC, indicating that the code is free-running on internal computer time.
5. Cycle Time: Time, in usec, between code cycle triggers. This value switches once per second between:
	- Average time
	- Maximum time
	- Minimum time
6. CPU Max Time: Same as CPU meter (2 above)

NOTE: Following 7,8 and 9 only pertain to IOP processes. These will not show up on user app screens.
7. Duotone Time ADC: 
8. IRIG-B Time Offset:
9: Duotone Time DAC:

10. CPU Max Time since last Diag Reset:
11. User code time:
12. Diagnostic Reset:
13. BURT Status:
\endverbatim

<b>I/O Status Section</b>
\verbatim
14. Overflow counter and reset:

15. Real-time Network Status and Related Display
Control information can be passed between RT applications via three mechanisms, each of which has a status bit shown in this section of the screen:
	1) Shared Memory
	2) PCIe realtime network.
	3 and 4) Reflected Memory (RFM) network, one network to each end station. In the case of an IOP, these two bits are set according to the status of the "Own Data" bit read from the RFM card. The IOP sends dummy data out at 1Hz and verifies that it receives its own data as a diagnostic for RFM loop integrety.

The related display is provided to give IPC status information for each data channel being received via one of these IPC mechanisms to further track down the exact cause of the error.

16. Guardian Status:

17. Filter Coefficient Reload:
An MEDM message button is provided such that, when pushed, it will cause the filter coefficient file to be reloaded. Status information is provided below this button, which displays either:
	1) Time of last reload (shown in example figure above).
	2) Message indicating that the coefficient file has been changed and does not match what is presently loaded into the realtime code. 
	3) At reload time, provides status of the reload process.

18. ADC Status and Related Display:
	A related display pushbutton and status information is provided for each ADC module defined in a model. 
	For an IOP, three status bits are shown:
	- Bit 0: ADC found and initialized.
	- Bit 1: ADC timing is correct.
	- Bit 2: ADC overflow ie input signal is beyond the input range of the ADC.
For a slave (user app) process, only two status bits are provided:
	- Bit 0: Communications established with IOP to receive ADC data.
	- Bit 1: ADC overflow indicator.

19. DAC Status and Related Display:
	For an IOP, a related display button and status indicators will be provided for each DAC module installed in the I/O chassis and defined in the IOP model. The number of status bits is dependent on the DAC type, ie 16bit or 18 bit. The status bits are defined as:
	- Bit 0: DAC is present and was mapped and initialized by the IOP code.
	- Bit 1: A slave (user app) model is writing to the DAC, is in sync with IOP. This bit may also indicate bad (Red) if DACKILL part in user model is tripped.
	- Bit 2: Overflow indicator. If code is trying to write value beyond the limits of the DAC, this indicator will go red.
	- Bit 3: DAC FIFO empty/full: If DAC clocking is correct and synched to IOP, this indicator is green (OK). If the DAC FIFO becomes empty or full, indicator will be red (error). More info can be found on the computer on which the IOP is running by checking its /proc/<iopmodelname> file.
	- Bit 4: (18 bit DAC only) Digital I/O built into these modules is used to reset a watchdog bit (at 1Hz) rate in the suspension control AI chassis. The WD setting is then read back and indicated in this bit (green=ok, red=fault). 

	For a slave (user app) model, related display and status indicators only appear for those DAC modules defined in the model. There are also only 2 status bits for each DAC:
	- Bit 0: Communication of DAC data established with IOP.
	- Bit 1: Overflow indicator, same definition as Bit 2 for an IOP above.
\endverbatim

<b>DAQ Status Section</b>
\verbatim
DAQ Status Section
20. DAQ Status:
21. DAQ CRC errors/sec:
22. DAQ total CRC errors:
23. DCUID Number:
24. DAQ Network Status:
25. DAQ - Number of DAQ channels.
26. DAQ - DAQ Data rate
27. DAQ - Total DAQ rate:
28. DAQ channel configuration reload:
29. Number of TP selected:
30. Individual TP selection numbers:
31. Arbitrary Waveform Generator (AWG) Status:
\endverbatim

- \subpage AdcUse "ADC Input Monitor Display"
- \subpage DacUse "DAC Output Monitor Display"
- \subpage IPCxUse "Real-time Network Status Display"
\verbatim
\endverbatim

*/
