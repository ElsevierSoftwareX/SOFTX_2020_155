/*! \page rcgSect5 5.0  RCG Application Development
\section rcgSect51 5.1 General Rules and Guidelines
Some overview notes before starting an application development process:\n
	- Only modules shown in the CDS_PARTS.mdl file may be used in the application development. Simulink native parts that may be used are shown in the CDS_PARTS >> simLinkParts window. \n
	- The tool is designed to work with the LIGO CDS standard naming convention, which includes: \n
		- All channel names shall be upper case. \n
		- All channel names shall be of the form A1:SYS-SUBSYS_XXX_YYY where: \n
			- A1 is the Interferometer (IFO) site and number, such as H1, H2, L1, M1, etc., followed by a colon (:). The IFO part of the name is set using the cdsParameters part in the application model (see example in next section). \n
			- SYS is a three letter system designator, such as SUS, ISI, SEI, LSC, ASC, etc., followed by a dash (-).  \n
			-  SUBSYS and beyond are user definable, up to a maximum channel name length of 28 characters (limit set by EPICS software).  Underscores are used to further break up the name, with any number of characters in between. \n
	- The Matlab file name shall be of the form: \n
		- IFO name (two characters eg h1. \n
		- Subsystem name (three characters) eg sus, sei, isi, etc. \n
		- Remainder of name is arbitrary, but should provide a further description of the system to be controlled and must make the name unique for a particular installation. \n
			- Examples for aLIGO:  h1susetmx, h1susetmy, h1seiham2. The RCG will pick off the first two characters as the interferometer (IFO) name and expect the next three characters to be the system name in order to produce a channel list consistent with (2) above. \n
	- Every model shall contain one, and only one, \ref ParameterUse "Parameter Block". \n
	- Every model shall contain at least one ADC part. \n
	- For ease of duplication, the top level of models should be limited to I/O parts, with other parts nested in subsystem components. 
\section rcgSect52 5.2 Code Compilation and Installation
\verbatim
In a standard aLIGO installation, a particular computer and code build area is set up by the site system administrator has been set up to compile user models. User models are controlled under the CDS SVN repository in the userapps area, with each major subsystem assigned a directory within this area. A new RCG user should contact the site system administrator for this information.

Once set up, the compilation proceeds by:
	1) Login into the assigned build computer and cd to the BUILD directory.
	2) From the shell prompt, enter ‘make modelname’. This will start the model parsing and compilation process. The resulting products are:
		a. Real-time code source and executable kernel object in the BUILD/src/fe/modelname directory.
		b. EPICS database and compilation code in the BUILD/build/modelnameepics directory.
		c. Complete EPICS database and executable, ready for installation, in the BUILD/target/modelnameepics directory.
	3) After successful compilation, the RCG produced code must be moved into the standard runtime directories. This is done by 
	   entering ‘make install-modelname’. This command moves the executable software into the standard code startup area ie 
	   /opt/rtcds/site/ifo/target/modelname directory. Included in the install are:
		a. A complete backup of the previous code installation into the /opt/rtcds/site/ifo/target_archive/modelname directory. 
		b. startmodelname and killmodelname scripts in the /opt/rtcds/site/ifo/scripts area. These scripts are later used to 
		   start and stop the code on the assigned real-time computer.
		c. Autogenerated EPICS MEDM screens are moved into the /opt/rtcds/site/ifo/medm/modelname directory.
		d. Runtime code moved into the /opt/rtcds/site/ifo/modelname directory, including:
			i. Real-time executable kernel object into the bin subdirectory.
			ii. EPICS related code and startup scripts into the modelnameepics subdirectory.
			iii. Compilation information files into the src subdirectory. This area also contains a copy of all source code 
			     used in this build.
		e. Appropriate GDS testpoint information moved into place for use by the DAQ and GDS software.
		f. DAQ channel configuration file moved into /opt/rtcds/site/ifo/chans/daq directory. This file is used by the 
		   real-time code and DAQ system to acquire data.
		g. IIR filter module coefficient definition file moved into /opt/rtcds/site/ifo/chans directory. This file is used by the 
		   foton tool to store filter coefficient information, loaded by the real-time code to define its filter calculations.

\endverbatim
*/
